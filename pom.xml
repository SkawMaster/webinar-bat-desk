<project xmlns="http://maven.apache.org/POM/4.0.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd">
	<modelVersion>4.0.0</modelVersion>

	<groupId>com.bat.desk</groupId>
	<artifactId>bat-desk</artifactId>
	<version>0.0.1-SNAPSHOT</version>
	<packaging>pom</packaging>

	<!-- Spring Boot Starter Parent -->
	<parent>
		<groupId>org.springframework.boot</groupId>
		<artifactId>spring-boot-starter-parent</artifactId>
		<version>1.4.2.RELEASE</version>

	</parent>

	<properties>
		<java.version>1.8</java.version>
		<build.encoding>UTF-8</build.encoding>
		<phantomjs.path>E:\\software\\phantomjs-2.1.1-windows\\bin\\phantomjs.exe</phantomjs.path>
		<skip.integration.tests>true</skip.integration.tests>
		<skip.unit.tests>false</skip.unit.tests>
		<nexus.releases.url>http://nexus:8081/repository/maven-releases/</nexus.releases.url>
		<nexus.snapshots.url>http://nexus:8081/repository/maven-snapshots/</nexus.snapshots.url>
		<sonar.host.url>http://sonarqube:9000</sonar.host.url>
	</properties>

	<scm>
		<url>https://github.com/atSistemas/webinar-bat-desk.git</url>
		<connection>scm:git:git://github.com/atSistemas/webinar-bat-desk.git</connection>
		<developerConnection>scm:git:ssh://git@github.com/atSistemas/webinar-bat-desk.git</developerConnection>
	</scm>

	<distributionManagement>
		<repository>
			<id>nexus-releases</id>
			<name>Internal Releases</name>
			<url>${nexus.releases.url}</url>
		</repository>
		<snapshotRepository>
			<id>nexus-snapshots</id>
			<name>Internal Snapshot Releases</name>
			<url>${nexus.snapshots.url}</url>
		</snapshotRepository>
	</distributionManagement>

	<profiles>
		<profile>
			<id>all-tests</id>
			<properties>
				<build.profile.id>all-tests</build.profile.id>
				<skip.integration.tests>true</skip.integration.tests>
				<skip.unit.tests>false</skip.unit.tests>
			</properties>
		</profile>
		<profile>
			<id>integration-tests</id>
			<properties>
				<build.profile.id>integration-test</build.profile.id>
				<skip.integration.tests>false</skip.integration.tests>
				<skip.unit.tests>true</skip.unit.tests>
			</properties>
		</profile>

		<profile>
			<id>sonar-coverage</id>
			<build>
				<plugins>
					<plugin>
						<groupId>org.jacoco</groupId>
						<artifactId>jacoco-maven-plugin</artifactId>
						<configuration>
							<append>true</append>
						</configuration>
						<executions>
							<execution>
								<id>agent-for-ut</id>
								<goals>
									<goal>prepare-agent</goal>
								</goals>
							</execution>
							<execution>
								<id>agent-for-it</id>
								<goals>
									<goal>prepare-agent-integration</goal>
								</goals>
							</execution>
							<execution>
								<id>jacoco-site</id>
								<phase>verify</phase>
								<goals>
									<goal>report</goal>
								</goals>
							</execution>
						</executions>
					</plugin>
				</plugins>
			</build>
		</profile>
	</profiles>

	<dependencyManagement>
		<dependencies>
			<dependency>
				<groupId>org.sonarsource.scanner.maven</groupId>
				<artifactId>sonar-maven-plugin</artifactId>
				<version>3.2</version>
				<scope>test</scope>
			</dependency>
		</dependencies>
	</dependencyManagement>

	<build>
		<finalName>bat-desk</finalName>
		<pluginManagement>
			<plugins>

				<!-- Plugin used to compile the project source -->
				<plugin>
					<groupId>org.apache.maven.plugins</groupId>
					<artifactId>maven-compiler-plugin</artifactId>
					<configuration>
						<source>${java.version}</source>
						<target>${java.version}</target>
						<encoding>${build.encoding}</encoding>
					</configuration>
				</plugin>

				<!-- Plugin used to handle the project resources -->
				<plugin>
					<groupId>org.apache.maven.plugins</groupId>
					<artifactId>maven-resources-plugin</artifactId>
					<configuration>
						<encoding>${build.encoding}</encoding>
					</configuration>
				</plugin>

				<!-- Plugin used to provides Spring Boot support -->
				<plugin>
					<groupId>org.springframework.boot</groupId>
					<artifactId>spring-boot-maven-plugin</artifactId>
					<executions>
						<execution>
							<goals>
								<goal>repackage</goal>
							</goals>
						</execution>
					</executions>
				</plugin>

				<!-- Plugin used to build lifecycle to execute unit test (test phase) -->
				<plugin>
					<groupId>org.apache.maven.plugins</groupId>
					<artifactId>maven-surefire-plugin</artifactId>
					<configuration>
						<skipTests>${skip.unit.tests}</skipTests>
					</configuration>
					<executions>
						<execution>
							<id>it-test</id>
							<phase>integration-test</phase>
							<goals>
								<goal>test</goal>
							</goals>
							<configuration>
								<includes>
									<include>**/*IT.class</include>
								</includes>
								<argLine>-Dphantomjs.binary.path=${phantomjs.path}</argLine>
								<skipTests>${skip.integration.tests}</skipTests>
							</configuration>
						</execution>
					</executions>
				</plugin>
				<plugin>
					<groupId>org.jacoco</groupId>
					<artifactId>jacoco-maven-plugin</artifactId>
					<version>0.7.8</version>
				</plugin>
			</plugins>
		</pluginManagement>
	</build>

	<modules>
		<module>bat-desk-common</module>
		<module>bat-villain-core</module>
		<module>bat-desk-web</module>
		<module>bat-architecture-testing</module>
		<module>bat-architecture-common</module>
	</modules>

</project>